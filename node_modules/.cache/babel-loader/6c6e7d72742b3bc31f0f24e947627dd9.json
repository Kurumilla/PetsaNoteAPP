{"ast":null,"code":"// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\nimport 'materialize-css/dist/js/materialize';\nimport \"./stylesheets/application.scss\";\nimport Rails from \"@rails/ujs\";\nimport Turbolinks from \"turbolinks\";\nimport * as ActiveStorage from \"@rails/activestorage\";\nimport \"channels\";\nimport './tooltips';\nRails.start();\nTurbolinks.start();\nActiveStorage.start();\nconsole.log('Webpacker is working!');\ndocument.addEventListener('turbolinks:load', function () {\n  M.updateTextFields();\n  console.log('Webpacker is working!');\n  var elems = document.querySelectorAll('.materialize-textarea');\n\n  if (elems.length) {\n    elems.forEach(function (elem) {\n      return M.textareaAutoResize(elem);\n    });\n  }\n\n  var themeToggle = document.getElementById(\"theme-toggle\");\n  var isDarkMode = localStorage.getItem(\"darkMode\") === \"true\";\n\n  if (isDarkMode) {\n    document.body.classList.add(\"dark-mode\");\n    if (themeToggle) themeToggle.textContent = t(\"light_mode\");\n  }\n\n  if (themeToggle) {\n    themeToggle.addEventListener(\"click\", function () {\n      var isDarkMode = document.body.classList.toggle(\"dark-mode\");\n      themeToggle.textContent = isDarkMode ? t(\"light_mode\") : t(\"dark_mode\");\n      localStorage.setItem(\"darkMode\", isDarkMode);\n    });\n  }\n\n  var savedLocale = localStorage.getItem('locale');\n\n  if (savedLocale) {\n    document.documentElement.lang = savedLocale;\n  }\n});\n\nfunction changeLanguage(locale) {\n  localStorage.setItem('locale', locale);\n}","map":{"version":3,"sources":["/home/kurumilla/git/PetsaNoteAPP/app/javascript/packs/application.js"],"names":["Rails","Turbolinks","ActiveStorage","start","console","log","document","addEventListener","M","updateTextFields","elems","querySelectorAll","length","forEach","elem","textareaAutoResize","themeToggle","getElementById","isDarkMode","localStorage","getItem","body","classList","add","textContent","t","toggle","setItem","savedLocale","documentElement","lang","changeLanguage","locale"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,OAAO,qCAAP;AACA,OAAO,gCAAP;AAEA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;AACA,OAAO,UAAP;AAEA,OAAO,YAAP;AAEAF,KAAK,CAACG,KAAN;AACAF,UAAU,CAACE,KAAX;AACAD,aAAa,CAACC,KAAd;AAEAC,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEAC,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,EAA6C,YAAY;AACvDC,EAAAA,CAAC,CAACC,gBAAF;AAEAL,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,MAAIK,KAAK,GAAGJ,QAAQ,CAACK,gBAAT,CAA0B,uBAA1B,CAAZ;;AACA,MAAID,KAAK,CAACE,MAAV,EAAkB;AAChBF,IAAAA,KAAK,CAACG,OAAN,CAAc,UAAAC,IAAI;AAAA,aAAIN,CAAC,CAACO,kBAAF,CAAqBD,IAArB,CAAJ;AAAA,KAAlB;AACD;;AAED,MAAME,WAAW,GAAGV,QAAQ,CAACW,cAAT,CAAwB,cAAxB,CAApB;AAEA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,MAAxD;;AACA,MAAIF,UAAJ,EAAgB;AACdZ,IAAAA,QAAQ,CAACe,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,WAA5B;AACA,QAAIP,WAAJ,EAAiBA,WAAW,CAACQ,WAAZ,GAA0BC,CAAC,CAAC,YAAD,CAA3B;AAClB;;AAED,MAAIT,WAAJ,EAAiB;AACfA,IAAAA,WAAW,CAACT,gBAAZ,CAA6B,OAA7B,EAAsC,YAAM;AAC1C,UAAMW,UAAU,GAAGZ,QAAQ,CAACe,IAAT,CAAcC,SAAd,CAAwBI,MAAxB,CAA+B,WAA/B,CAAnB;AACAV,MAAAA,WAAW,CAACQ,WAAZ,GAA0BN,UAAU,GAAGO,CAAC,CAAC,YAAD,CAAJ,GAAqBA,CAAC,CAAC,WAAD,CAA1D;AACAN,MAAAA,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCT,UAAjC;AACD,KAJD;AAKD;;AAED,MAAMU,WAAW,GAAGT,YAAY,CAACC,OAAb,CAAqB,QAArB,CAApB;;AACA,MAAIQ,WAAJ,EAAiB;AACftB,IAAAA,QAAQ,CAACuB,eAAT,CAAyBC,IAAzB,GAAgCF,WAAhC;AACD;AACF,CA7BD;;AA+BA,SAASG,cAAT,CAAwBC,MAAxB,EAAgC;AAC9Bb,EAAAA,YAAY,CAACQ,OAAb,CAAqB,QAArB,EAA+BK,MAA/B;AACD","sourcesContent":["// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\n\nimport 'materialize-css/dist/js/materialize'\nimport \"./stylesheets/application.scss\";\n\nimport Rails from \"@rails/ujs\"\nimport Turbolinks from \"turbolinks\"\nimport * as ActiveStorage from \"@rails/activestorage\"\nimport \"channels\"\n\nimport './tooltips';\n\nRails.start()\nTurbolinks.start()\nActiveStorage.start()\n\nconsole.log('Webpacker is working!');\n\ndocument.addEventListener('turbolinks:load', function () {\n  M.updateTextFields();\n\n  console.log('Webpacker is working!');\n  let elems = document.querySelectorAll('.materialize-textarea')\n  if (elems.length) {\n    elems.forEach(elem => M.textareaAutoResize(elem))\n  }\n\n  const themeToggle = document.getElementById(\"theme-toggle\");\n\n  const isDarkMode = localStorage.getItem(\"darkMode\") === \"true\";\n  if (isDarkMode) {\n    document.body.classList.add(\"dark-mode\");\n    if (themeToggle) themeToggle.textContent = t(\"light_mode\");\n  }\n\n  if (themeToggle) {\n    themeToggle.addEventListener(\"click\", () => {\n      const isDarkMode = document.body.classList.toggle(\"dark-mode\");\n      themeToggle.textContent = isDarkMode ? t(\"light_mode\") : t(\"dark_mode\");\n      localStorage.setItem(\"darkMode\", isDarkMode);\n    });\n  }\n\n  const savedLocale = localStorage.getItem('locale');\n  if (savedLocale) {\n    document.documentElement.lang = savedLocale;\n  }\n})\n\nfunction changeLanguage(locale) {\n  localStorage.setItem('locale', locale);\n}\n"]},"metadata":{},"sourceType":"module"}