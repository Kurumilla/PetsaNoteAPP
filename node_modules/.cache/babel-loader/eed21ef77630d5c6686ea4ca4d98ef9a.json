{"ast":null,"code":"document.addEventListener('turbolinks:load', function () {\n  console.log(\"Hola\");\n  var orderSelect = document.querySelector('select[name=\"order\"]'); // Intentamos obtener el valor del orden desde localStorage\n\n  var savedOrder = localStorage.getItem('note_order');\n  var orderToApply = savedOrder || null; // Si no hay valor guardado, lo tomamos de la URL\n  // Revisa si hay un parámetro 'order' en la URL y lo aplica al select\n\n  var urlParams = new URLSearchParams(window.location.search);\n  var orderFromUrl = urlParams.get('order');\n\n  if (orderFromUrl) {\n    orderToApply = orderFromUrl;\n  } // Si encontramos un valor de orden, lo aplicamos tanto al select como a la URL\n\n\n  if (orderToApply) {\n    // Aplicamos el valor al select\n    orderSelect.value = orderToApply; // Si el valor del orden en la URL es diferente de lo que está en la URL actual, actualizamos la URL\n\n    if (window.location.search.indexOf('order') === -1 || orderFromUrl !== savedOrder) {\n      var currentUrl = new URL(window.location.href);\n      currentUrl.searchParams.set('order', orderToApply); // Establecemos el parámetro 'order'\n\n      window.history.pushState({}, '', currentUrl); // Actualizamos la URL sin recargar la página\n    }\n  }\n\n  orderSelect.addEventListener('change', function () {\n    var selectedValue = this.value;\n    localStorage.setItem('note_order', selectedValue);\n    var currentUrl = new URL(window.location.href);\n    currentUrl.searchParams.set('order', selectedValue);\n    window.history.pushState({}, '', currentUrl); // Actualiza la URL sin recargar la página\n  });\n});","map":{"version":3,"sources":["/home/kurumilla/git/PetsaNoteAPP/app/javascript/packs/order.js"],"names":["document","addEventListener","console","log","orderSelect","querySelector","savedOrder","localStorage","getItem","orderToApply","urlParams","URLSearchParams","window","location","search","orderFromUrl","get","value","indexOf","currentUrl","URL","href","searchParams","set","history","pushState","selectedValue","setItem"],"mappings":"AAAAA,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,EAA6C,YAAW;AACtDC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,sBAAvB,CAApB,CAFsD,CAItD;;AACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;AACA,MAAIC,YAAY,GAAGH,UAAU,IAAI,IAAjC,CANsD,CAMf;AAEvC;;AACA,MAAMI,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,MAAMC,YAAY,GAAGL,SAAS,CAACM,GAAV,CAAc,OAAd,CAArB;;AACA,MAAID,YAAJ,EAAkB;AAChBN,IAAAA,YAAY,GAAGM,YAAf;AACD,GAbqD,CAetD;;;AACA,MAAIN,YAAJ,EAAkB;AAChB;AACAL,IAAAA,WAAW,CAACa,KAAZ,GAAoBR,YAApB,CAFgB,CAIhB;;AACA,QAAIG,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBI,OAAvB,CAA+B,OAA/B,MAA4C,CAAC,CAA7C,IAAkDH,YAAY,KAAKT,UAAvE,EAAmF;AACjF,UAAMa,UAAU,GAAG,IAAIC,GAAJ,CAAQR,MAAM,CAACC,QAAP,CAAgBQ,IAAxB,CAAnB;AACAF,MAAAA,UAAU,CAACG,YAAX,CAAwBC,GAAxB,CAA4B,OAA5B,EAAqCd,YAArC,EAFiF,CAE7B;;AACpDG,MAAAA,MAAM,CAACY,OAAP,CAAeC,SAAf,CAAyB,EAAzB,EAA6B,EAA7B,EAAiCN,UAAjC,EAHiF,CAGlC;AAChD;AACF;;AAEDf,EAAAA,WAAW,CAACH,gBAAZ,CAA6B,QAA7B,EAAuC,YAAW;AAChD,QAAMyB,aAAa,GAAG,KAAKT,KAA3B;AAEAV,IAAAA,YAAY,CAACoB,OAAb,CAAqB,YAArB,EAAmCD,aAAnC;AAGA,QAAMP,UAAU,GAAG,IAAIC,GAAJ,CAAQR,MAAM,CAACC,QAAP,CAAgBQ,IAAxB,CAAnB;AACAF,IAAAA,UAAU,CAACG,YAAX,CAAwBC,GAAxB,CAA4B,OAA5B,EAAqCG,aAArC;AACAd,IAAAA,MAAM,CAACY,OAAP,CAAeC,SAAf,CAAyB,EAAzB,EAA6B,EAA7B,EAAiCN,UAAjC,EARgD,CAQD;AAChD,GATD;AAUD,CAtCD","sourcesContent":["document.addEventListener('turbolinks:load', function() {\r\n  console.log(\"Hola\")\r\n  const orderSelect = document.querySelector('select[name=\"order\"]');\r\n  \r\n  // Intentamos obtener el valor del orden desde localStorage\r\n  const savedOrder = localStorage.getItem('note_order');\r\n  let orderToApply = savedOrder || null; // Si no hay valor guardado, lo tomamos de la URL\r\n\r\n  // Revisa si hay un parámetro 'order' en la URL y lo aplica al select\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const orderFromUrl = urlParams.get('order');\r\n  if (orderFromUrl) {\r\n    orderToApply = orderFromUrl;\r\n  }\r\n\r\n  // Si encontramos un valor de orden, lo aplicamos tanto al select como a la URL\r\n  if (orderToApply) {\r\n    // Aplicamos el valor al select\r\n    orderSelect.value = orderToApply;\r\n\r\n    // Si el valor del orden en la URL es diferente de lo que está en la URL actual, actualizamos la URL\r\n    if (window.location.search.indexOf('order') === -1 || orderFromUrl !== savedOrder) {\r\n      const currentUrl = new URL(window.location.href);\r\n      currentUrl.searchParams.set('order', orderToApply); // Establecemos el parámetro 'order'\r\n      window.history.pushState({}, '', currentUrl);  // Actualizamos la URL sin recargar la página\r\n    }\r\n  }\r\n\r\n  orderSelect.addEventListener('change', function() {\r\n    const selectedValue = this.value;\r\n    \r\n    localStorage.setItem('note_order', selectedValue);\r\n\r\n\r\n    const currentUrl = new URL(window.location.href);\r\n    currentUrl.searchParams.set('order', selectedValue); \r\n    window.history.pushState({}, '', currentUrl);  // Actualiza la URL sin recargar la página\r\n  });\r\n});"]},"metadata":{},"sourceType":"module"}